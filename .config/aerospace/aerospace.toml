# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking
#
# APPLICATION WORKSPACE SETUP:
# This config includes automatic workspace assignment for applications.
# Each application has two configurations:
# 1. Window detection rule: [[on-window-detected]] - automatically moves app windows to designated workspace
# 2. Keyboard binding: alt-{letter} - launches app and switches to its workspace
#
# Current application mappings:
# | Workspace | Application(s)          | Shortcut | App Path/Command |
# |-----------|-------------------------|----------|------------------|
# | A         | ChatGPT, Claude         | alt-a    | /Applications/ChatGPT.app |
# | B         | Chrome (browsers)       | alt-b    | /Applications/Google Chrome.app |
# | C         | Cursor                  | alt-c    | /Applications/Cursor.app |
# | D         | Discord                 | alt-d    | /Applications/Discord.app |
# | E         | Emacs                   | alt-e    | /Applications/Emacs.app |
# | M         | Mimestream              | alt-m    | /Applications/Mimestream.app |
# | N         | Obsidian                | alt-n    | /Applications/Obsidian.app |
# | O         | Ollama                  | alt-o    | /Applications/Ollama.app |
# | Q         | Weather                 | alt-q    | /System/Applications/Weather.app |
# | S         | Slack                   | alt-s    | /Applications/Slack.app |
# | T         | Terminal/Warp           | alt-t    | /Applications/Warp.app |
# | U         | Unread                  | alt-u    | /Applications/Unread.app |
# | V         | Books                   | alt-v    | /Applications/Books.app |
# | W         | WhatsApp, Messages      | alt-w    | /Applications/WhatsApp.app |
# | X         | X (x.com), Elk          | alt-x    | ~/Applications/Chrome Apps.localized/X.app |
# | Z         | Activity Monitor        | alt-z    | /System/Applications/Utilities/Activity Monitor.app |
#
# To add new applications:
# 1. Add [[on-window-detected]] rule with app-name-regex-substring matching
# 2. Update the corresponding alt-{letter} binding in [mode.main.binding]
# 3. Update this documentation comment

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 5
    inner.vertical =   5
    outer.left =       0
    outer.bottom =     0
    outer.top =        0
    outer.right =      0

[[on-window-detected]]
if.app-name-regex-substring = 'Finder'
run = 'layout floating'

# ChatGPT and Claude to workspace A
[[on-window-detected]]
if.app-name-regex-substring = 'ChatGPT'
run = ['move-node-to-workspace A']

[[on-window-detected]]
if.app-name-regex-substring = 'Claude'
run = ['move-node-to-workspace A']

# Browser to workspace B
[[on-window-detected]]
if.app-name-regex-substring = 'Safari'
run = ['move-node-to-workspace B']

# Cursor to workspace C
[[on-window-detected]]
if.app-name-regex-substring = 'Cursor'
run = ['move-node-to-workspace C']

[[on-window-detected]]
if.app-name-regex-substring = 'Chrome'
run = ['move-node-to-workspace B']

[[on-window-detected]]
if.app-name-regex-substring = 'Firefox'
run = ['move-node-to-workspace B']

[[on-window-detected]]
if.app-name-regex-substring = 'Arc'
run = ['move-node-to-workspace B']

# X Chrome app and Elk to workspace X
[[on-window-detected]]
if.app-name-regex-substring = 'X'
run = ['move-node-to-workspace X']

[[on-window-detected]]
if.app-name-regex-substring = 'Elk'
run = ['move-node-to-workspace X']

# Discord to workspace D
[[on-window-detected]]
if.app-name-regex-substring = 'Discord'
run = ['move-node-to-workspace D']

# Emacs to workspace E
[[on-window-detected]]
if.app-name-regex-substring = 'Emacs'
run = ['move-node-to-workspace E']

# Mail to workspace M
[[on-window-detected]]
if.app-name-regex-substring = 'Mail'
run = ['move-node-to-workspace M']

[[on-window-detected]]
if.app-name-regex-substring = 'Mimestream'
run = ['move-node-to-workspace M']

# Obsidian to workspace N
[[on-window-detected]]
if.app-name-regex-substring = 'Obsidian'
run = ['move-node-to-workspace N']

# Ollama to workspace O
[[on-window-detected]]
if.app-name-regex-substring = 'Ollama'
run = ['move-node-to-workspace O']

# Weather to workspace Q
[[on-window-detected]]
if.app-name-regex-substring = 'Weather'
run = ['move-node-to-workspace Q']

# Slack to workspace S
[[on-window-detected]]
if.app-name-regex-substring = 'Slack'
run = ['move-node-to-workspace S']

# Terminal/Warp to workspace T
[[on-window-detected]]
if.app-name-regex-substring = 'Terminal'
run = ['move-node-to-workspace T']

[[on-window-detected]]
if.app-name-regex-substring = 'Warp'
run = ['move-node-to-workspace T']

# Unread to workspace U
[[on-window-detected]]
if.app-name-regex-substring = 'Unread'
run = ['move-node-to-workspace U']

# Books to workspace V
[[on-window-detected]]
if.app-name-regex-substring = 'Books'
run = ['move-node-to-workspace V']

# WhatsApp and Messages to workspace W
[[on-window-detected]]
if.app-name-regex-substring = 'WhatsApp'
run = ['move-node-to-workspace W']

[[on-window-detected]]
if.app-name-regex-substring = 'Messages'
run = ['move-node-to-workspace W']

# Activity Monitor to workspace Z
[[on-window-detected]]
if.app-name-regex-substring = 'Activity Monitor'
run = ['move-node-to-workspace Z']



# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
    #                   sectionSign (ISO keyboards only, european keyboards only)
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Terminal"
    #     do script
    #     activate
    # end tell'
    # '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    alt-slash = 'layout tiles horizontal vertical'
    alt-comma = 'layout accordion horizontal vertical'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    alt-left = 'focus left'
    alt-down = 'focus down'
    alt-up = 'focus up'
    alt-right = 'focus right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    alt-shift-left = 'move left'
    alt-shift-down = 'move down'
    alt-shift-up = 'move up'
    alt-shift-right = 'move right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    alt-minus = 'resize smart -50'
    alt-equal = 'resize smart +50'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    alt-1 = 'workspace 1'
    alt-2 = 'workspace 2'
    alt-3 = 'workspace 3'
    alt-4 = 'workspace 4'
    alt-5 = 'workspace 5'
    alt-6 = 'workspace 6'
    alt-7 = 'workspace 7'
    alt-8 = 'workspace 8'
    alt-9 = 'workspace 9'
    alt-a = ['exec-and-forget open /Applications/ChatGPT.app', 'workspace A'] # ChatGPT/Claude workspace
    alt-b = ['exec-and-forget open /Applications/Google\ Chrome.app', 'workspace B'] # Browser workspace
    alt-c = ['exec-and-forget open /Applications/Cursor.app', 'workspace C'] # Cursor workspace
    alt-d = ['exec-and-forget open /Applications/Discord.app', 'workspace D'] # Discord workspace
    alt-e = ['exec-and-forget open /Applications/Emacs.app', 'workspace E'] # Emacs workspace
    alt-f = 'workspace F'
    alt-g = 'workspace G'
    alt-i = 'workspace I'
    alt-m = ['exec-and-forget open /Applications/Mimestream.app', 'workspace M'] # Mail workspace
    alt-n = ['exec-and-forget open /Applications/Obsidian.app', 'workspace N'] # Obsidian workspace
    alt-o = ['exec-and-forget open /Applications/Ollama.app', 'workspace O'] # Ollama workspace
    alt-p = 'workspace P'
    alt-q = ['exec-and-forget open /System/Applications/Weather.app', 'workspace Q'] # Weather workspace
    alt-r = 'workspace R'
    alt-s = ['exec-and-forget open /Applications/Slack.app', 'workspace S'] # Slack workspace
    alt-t = ['exec-and-forget open /Applications/Warp.app', 'workspace T'] # Terminal/Warp workspace
    alt-u = ['exec-and-forget open /Applications/Unread.app', 'workspace U'] # Unread workspace
    alt-v = ['exec-and-forget open /System/Applications/Books.app', 'workspace V'] # Books workspace
    alt-w = ['exec-and-forget open /Applications/WhatsApp.app', 'workspace W'] # WhatsApp/Messages workspace
    alt-x = ['exec-and-forget open ~/Applications/Chrome\ Apps.localized/X.app', 'workspace X'] # X Chrome app
    alt-y = 'workspace Y'
    alt-z = ['exec-and-forget open /System/Applications/Utilities/Activity\ Monitor.app', 'workspace Z'] # Activity Monitor workspace

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
    alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
    alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
    alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
    alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
    alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
    alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7']
    alt-shift-8 = ['move-node-to-workspace 8', 'workspace 8']
    alt-shift-9 = ['move-node-to-workspace 9', 'workspace 9']
    alt-shift-a = ['move-node-to-workspace A', 'workspace A']
    alt-shift-b = ['move-node-to-workspace B', 'workspace B']
    alt-shift-c = ['move-node-to-workspace C', 'workspace C']
    alt-shift-d = ['move-node-to-workspace D', 'workspace D']
    alt-shift-e = ['move-node-to-workspace E', 'workspace E']
    alt-shift-f = ['move-node-to-workspace F', 'workspace F']
    alt-shift-g = ['move-node-to-workspace G', 'workspace G']
    alt-shift-i = ['move-node-to-workspace I', 'workspace I']
    alt-shift-m = ['move-node-to-workspace M', 'workspace M']
    alt-shift-n = ['move-node-to-workspace N', 'workspace N']
    alt-shift-o = ['move-node-to-workspace O', 'workspace O']
    alt-shift-p = ['move-node-to-workspace P', 'workspace P']
    alt-shift-q = ['move-node-to-workspace Q', 'workspace Q']
    alt-shift-r = ['move-node-to-workspace R', 'workspace R']
    alt-shift-s = ['move-node-to-workspace S', 'workspace S']
    alt-shift-t = ['move-node-to-workspace T', 'workspace T']
    alt-shift-u = ['move-node-to-workspace U', 'workspace U']
    alt-shift-v = ['move-node-to-workspace V', 'workspace V']
    alt-shift-w = ['move-node-to-workspace W', 'workspace W']
    alt-shift-x = ['move-node-to-workspace X', 'workspace X']
    alt-shift-y = ['move-node-to-workspace Y', 'workspace Y']
    alt-shift-z = ['move-node-to-workspace Z', 'workspace Z']

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    alt-tab = 'workspace-back-and-forth'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']

    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    alt-shift-left = ['join-with left', 'mode main']
    alt-shift-down = ['join-with down', 'mode main']
    alt-shift-up = ['join-with up', 'mode main']
    alt-shift-right = ['join-with right', 'mode main']

    down = 'volume down'
    up = 'volume up'
    shift-down = ['volume set 0', 'mode main']
